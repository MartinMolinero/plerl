
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'SLR'

_lr_signature = 'programSTDIN AND PLUS_ONE MINUS_ONE STRING ASSIGN BETWEEN DOLLAR EQ FLOAT CONST_ASSIGN GREATER_OR_EQUAL IDENTIFIER INTEGER LEFT_BRACE LEFT_PAR LESS_OR_EQUAL LESS_THAN MINUS MORE_THAN NEQ OR PLUS RIGHT_BRACE RIGHT_PAR STAR USE CONSTANT PRINT FALSE IF TRUE WHILE ELSEprogram : declarationListdeclarationList :  declaration declarationListdeclarationList : declarationdeclaration : varDeclarationdeclaration : statementdeclaration : constDeclarationdeclaration : funcDeclarationvariable : DOLLAR IDENTIFIERvarDeclaration : variable ASSIGN sumExpvarDeclaration : variable ASSIGN STDINvariableType : numbernumber : INTEGERnumber : FLOATvariableType : STRINGvariableType : TRUEvariableType : FALSEconstDeclaration : USE CONSTANT IDENTIFIER CONST_ASSIGN variableTypefuncDeclaration : PRINT LEFT_PAR factor RIGHT_PARfuncDeclaration : PRINT LEFT_PAR sumLessExpression RIGHT_PARsumLessExpression : variable PLUS_ONEsumLessExpression : variable MINUS_ONEstatement : expressionstatement : conditionalStmtstatement : loopStmtconditionalStmt : matchedifconditionalStmt : unmatchedifmatchedif : IF LEFT_PAR logicalExp RIGHT_PAR LEFT_BRACE declarationList RIGHT_BRACE ELSE LEFT_BRACE declarationList RIGHT_BRACEunmatchedif : IF LEFT_PAR logicalExp RIGHT_PAR LEFT_BRACE declarationList RIGHT_BRACEloopStmt : WHILE LEFT_PAR logicalExp RIGHT_PAR LEFT_BRACE declarationList RIGHT_BRACEexpression : logicalExpexpression : sumLessExpressionlogicalExp : TRUE OR andExplogicalExp : FALSE OR andExplogicalExp : andExpandExp : TRUE AND compExpandExp : FALSE AND compExpandExp : compExpcompExp : sumExp compSign sumExpcompExp : sumExpcompSign : LESS_OR_EQUALcompSign : LESS_THANcompSign : MORE_THANcompSign : GREATER_OR_EQUALcompSign : EQcompSign : NEQsumExp : term sumSign sumExpsumExp : termsumSign : MINUSsumSign : PLUSterm : multiNegExp multiSign termterm : multiNegExpmultiSign : STARmultiSign : BETWEENmultiNegExp : unaryOp multiNegExpmultiNegExp : factorunaryOp : MINUSunaryOp : PLUSfactor : variablefactor : variableTypefactor : IDENTIFIERfactor : LEFT_PAR expression RIGHT_PAR'
    
_lr_action_items = {'USE':([0,2,3,4,7,8,9,10,11,12,13,17,18,19,20,21,22,25,26,27,29,30,32,33,34,35,37,38,47,52,53,58,59,60,61,69,75,76,77,78,79,80,81,82,83,85,86,87,88,91,92,94,95,96,99,100,102,104,],[1,-4,-25,-24,-59,-30,-51,-14,-11,-23,-15,-5,-55,-12,-60,-31,-6,-47,1,-58,-34,-16,-13,-37,-39,-7,-26,-22,-8,-20,-21,-15,-54,-58,-16,-58,-58,-50,-35,-15,-32,-16,-46,-10,-9,-36,-33,-38,-61,-19,-18,-17,1,1,-29,-28,1,-27,]),'CONSTANT':([1,],[39,]),'LESS_OR_EQUAL':([7,9,10,11,13,18,19,20,25,27,30,32,34,47,58,59,60,61,69,75,76,78,80,81,88,],[-59,-51,-14,-11,-15,-55,-12,-60,-47,-58,-16,-13,63,-8,-15,-54,-58,-16,-58,-58,-50,-15,-16,-46,-61,]),'RIGHT_PAR':([7,8,9,10,11,13,18,19,20,21,25,27,29,30,32,33,34,47,52,53,58,59,60,61,69,70,72,73,74,75,76,77,78,79,80,81,84,85,86,87,88,],[-59,-30,-51,-14,-11,-15,-55,-12,-60,-31,-47,-58,-34,-16,-13,-37,-39,-8,-20,-21,-15,-54,-58,-16,-58,88,90,91,92,-58,-50,-35,-15,-32,-16,-46,93,-36,-33,-38,-61,]),'RIGHT_BRACE':([2,3,4,7,8,9,10,11,12,13,17,18,19,20,21,22,25,26,27,29,30,32,33,34,35,37,38,47,51,52,53,58,59,60,61,69,75,76,77,78,79,80,81,82,83,85,86,87,88,91,92,94,97,98,99,100,103,104,],[-4,-25,-24,-59,-30,-51,-14,-11,-23,-15,-5,-55,-12,-60,-31,-6,-47,-3,-58,-34,-16,-13,-37,-39,-7,-26,-22,-8,-2,-20,-21,-15,-54,-58,-16,-58,-58,-50,-35,-15,-32,-16,-46,-10,-9,-36,-33,-38,-61,-19,-18,-17,99,100,-29,-28,104,-27,]),'WHILE':([0,2,3,4,7,8,9,10,11,12,13,17,18,19,20,21,22,25,26,27,29,30,32,33,34,35,37,38,47,52,53,58,59,60,61,69,75,76,77,78,79,80,81,82,83,85,86,87,88,91,92,94,95,96,99,100,102,104,],[5,-4,-25,-24,-59,-30,-51,-14,-11,-23,-15,-5,-55,-12,-60,-31,-6,-47,5,-58,-34,-16,-13,-37,-39,-7,-26,-22,-8,-20,-21,-15,-54,-58,-16,-58,-58,-50,-35,-15,-32,-16,-46,-10,-9,-36,-33,-38,-61,-19,-18,-17,5,5,-29,-28,5,-27,]),'LEFT_BRACE':([90,93,101,],[95,96,102,]),'PRINT':([0,2,3,4,7,8,9,10,11,12,13,17,18,19,20,21,22,25,26,27,29,30,32,33,34,35,37,38,47,52,53,58,59,60,61,69,75,76,77,78,79,80,81,82,83,85,86,87,88,91,92,94,95,96,99,100,102,104,],[6,-4,-25,-24,-59,-30,-51,-14,-11,-23,-15,-5,-55,-12,-60,-31,-6,-47,6,-58,-34,-16,-13,-37,-39,-7,-26,-22,-8,-20,-21,-15,-54,-58,-16,-58,-58,-50,-35,-15,-32,-16,-46,-10,-9,-36,-33,-38,-61,-19,-18,-17,6,6,-29,-28,6,-27,]),'STAR':([7,9,10,11,13,18,19,20,27,30,32,47,58,59,60,61,69,75,78,80,88,],[-59,43,-14,-11,-15,-55,-12,-60,-58,-16,-13,-8,-15,-54,-58,-16,-58,-58,-15,-16,-61,]),'LESS_THAN':([7,9,10,11,13,18,19,20,25,27,30,32,34,47,58,59,60,61,69,75,76,78,80,81,88,],[-59,-51,-14,-11,-15,-55,-12,-60,-47,-58,-16,-13,66,-8,-15,-54,-58,-16,-58,-58,-50,-15,-16,-46,-61,]),'TRUE':([0,2,3,4,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,25,26,27,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,78,79,80,81,82,83,85,86,87,88,89,91,92,94,95,96,99,100,102,104,],[13,-4,-25,-24,-59,-30,-51,-14,-11,-23,-15,-56,-57,-5,-55,-12,-60,-31,-6,-47,13,-58,-34,-16,58,-13,-37,-39,-7,13,-26,-22,13,58,-53,-52,58,58,78,-8,-49,58,-48,-20,-21,58,13,58,78,-15,-54,-58,-16,-42,-40,-43,58,-41,-44,-45,-58,-58,-50,-35,-15,-32,-16,-46,-10,-9,-36,-33,-38,-61,58,-19,-18,-17,13,13,-29,-28,13,-27,]),'MINUS':([0,2,3,4,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,25,26,27,29,30,31,32,33,34,35,36,37,38,40,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,78,79,80,81,82,83,85,86,87,88,91,92,94,95,96,99,100,102,104,],[14,-4,-25,-24,-59,-30,-51,-14,-11,-23,-15,-56,-57,-5,-55,-12,-60,-31,-6,50,14,-58,-34,-16,14,-13,-37,-39,-7,14,-26,-22,14,-53,-52,14,14,14,-8,-49,14,-48,-20,-21,14,14,14,14,-15,-54,-58,-16,-42,-40,-43,14,-41,-44,-45,-58,-58,-50,-35,-15,-32,-16,-46,-10,-9,-36,-33,-38,-61,-19,-18,-17,14,14,-29,-28,14,-27,]),'NEQ':([7,9,10,11,13,18,19,20,25,27,30,32,34,47,58,59,60,61,69,75,76,78,80,81,88,],[-59,-51,-14,-11,-15,-55,-12,-60,-47,-58,-16,-13,68,-8,-15,-54,-58,-16,-58,-58,-50,-15,-16,-46,-61,]),'CONST_ASSIGN':([71,],[89,]),'PLUS':([0,2,3,4,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,25,26,27,29,30,31,32,33,34,35,36,37,38,40,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,78,79,80,81,82,83,85,86,87,88,91,92,94,95,96,99,100,102,104,],[16,-4,-25,-24,-59,-30,-51,-14,-11,-23,-15,-56,-57,-5,-55,-12,-60,-31,-6,48,16,-58,-34,-16,16,-13,-37,-39,-7,16,-26,-22,16,-53,-52,16,16,16,-8,-49,16,-48,-20,-21,16,16,16,16,-15,-54,-58,-16,-42,-40,-43,16,-41,-44,-45,-58,-58,-50,-35,-15,-32,-16,-46,-10,-9,-36,-33,-38,-61,-19,-18,-17,16,16,-29,-28,16,-27,]),'INTEGER':([0,2,3,4,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,25,26,27,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,78,79,80,81,82,83,85,86,87,88,89,91,92,94,95,96,99,100,102,104,],[19,-4,-25,-24,-59,-30,-51,-14,-11,-23,-15,-56,-57,-5,-55,-12,-60,-31,-6,-47,19,-58,-34,-16,19,-13,-37,-39,-7,19,-26,-22,19,19,-53,-52,19,19,19,-8,-49,19,-48,-20,-21,19,19,19,19,-15,-54,-58,-16,-42,-40,-43,19,-41,-44,-45,-58,-58,-50,-35,-15,-32,-16,-46,-10,-9,-36,-33,-38,-61,19,-19,-18,-17,19,19,-29,-28,19,-27,]),'IDENTIFIER':([0,2,3,4,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,78,79,80,81,82,83,85,86,87,88,91,92,94,95,96,99,100,102,104,],[20,-4,-25,-24,-59,-30,-51,-14,-11,-23,-15,-56,-57,-5,-55,-12,-60,-31,-6,47,-47,20,-58,-34,-16,20,-13,-37,-39,-7,20,-26,-22,71,20,20,-53,-52,20,20,20,-8,-49,20,-48,-20,-21,20,20,20,20,-15,-54,-58,-16,-42,-40,-43,20,-41,-44,-45,-58,-58,-50,-35,-15,-32,-16,-46,-10,-9,-36,-33,-38,-61,-19,-18,-17,20,20,-29,-28,20,-27,]),'ASSIGN':([27,47,],[54,-8,]),'$end':([2,3,4,7,8,9,10,11,12,13,15,17,18,19,20,21,22,23,25,26,27,29,30,32,33,34,35,37,38,47,51,52,53,58,59,60,61,69,75,76,77,78,79,80,81,82,83,85,86,87,88,91,92,94,99,100,104,],[-4,-25,-24,-59,-30,-51,-14,-11,-23,-15,0,-5,-55,-12,-60,-31,-6,-1,-47,-3,-58,-34,-16,-13,-37,-39,-7,-26,-22,-8,-2,-20,-21,-15,-54,-58,-16,-58,-58,-50,-35,-15,-32,-16,-46,-10,-9,-36,-33,-38,-61,-19,-18,-17,-29,-28,-27,]),'STDIN':([54,],[82,]),'STRING':([0,2,3,4,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,25,26,27,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,78,79,80,81,82,83,85,86,87,88,89,91,92,94,95,96,99,100,102,104,],[10,-4,-25,-24,-59,-30,-51,-14,-11,-23,-15,-56,-57,-5,-55,-12,-60,-31,-6,-47,10,-58,-34,-16,10,-13,-37,-39,-7,10,-26,-22,10,10,-53,-52,10,10,10,-8,-49,10,-48,-20,-21,10,10,10,10,-15,-54,-58,-16,-42,-40,-43,10,-41,-44,-45,-58,-58,-50,-35,-15,-32,-16,-46,-10,-9,-36,-33,-38,-61,10,-19,-18,-17,10,10,-29,-28,10,-27,]),'GREATER_OR_EQUAL':([7,9,10,11,13,18,19,20,25,27,30,32,34,47,58,59,60,61,69,75,76,78,80,81,88,],[-59,-51,-14,-11,-15,-55,-12,-60,-47,-58,-16,-13,64,-8,-15,-54,-58,-16,-58,-58,-50,-15,-16,-46,-61,]),'DOLLAR':([0,2,3,4,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,25,26,27,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,78,79,80,81,82,83,85,86,87,88,91,92,94,95,96,99,100,102,104,],[24,-4,-25,-24,-59,-30,-51,-14,-11,-23,-15,-56,-57,-5,-55,-12,-60,-31,-6,-47,24,-58,-34,-16,24,-13,-37,-39,-7,24,-26,-22,24,24,-53,-52,24,24,24,-8,-49,24,-48,-20,-21,24,24,24,24,-15,-54,-58,-16,-42,-40,-43,24,-41,-44,-45,-58,-58,-50,-35,-15,-32,-16,-46,-10,-9,-36,-33,-38,-61,-19,-18,-17,24,24,-29,-28,24,-27,]),'ELSE':([100,],[101,]),'BETWEEN':([7,9,10,11,13,18,19,20,27,30,32,47,58,59,60,61,69,75,78,80,88,],[-59,42,-14,-11,-15,-55,-12,-60,-58,-16,-13,-8,-15,-54,-58,-16,-58,-58,-15,-16,-61,]),'EQ':([7,9,10,11,13,18,19,20,25,27,30,32,34,47,58,59,60,61,69,75,76,78,80,81,88,],[-59,-51,-14,-11,-15,-55,-12,-60,-47,-58,-16,-13,67,-8,-15,-54,-58,-16,-58,-58,-50,-15,-16,-46,-61,]),'IF':([0,2,3,4,7,8,9,10,11,12,13,17,18,19,20,21,22,25,26,27,29,30,32,33,34,35,37,38,47,52,53,58,59,60,61,69,75,76,77,78,79,80,81,82,83,85,86,87,88,91,92,94,95,96,99,100,102,104,],[28,-4,-25,-24,-59,-30,-51,-14,-11,-23,-15,-5,-55,-12,-60,-31,-6,-47,28,-58,-34,-16,-13,-37,-39,-7,-26,-22,-8,-20,-21,-15,-54,-58,-16,-58,-58,-50,-35,-15,-32,-16,-46,-10,-9,-36,-33,-38,-61,-19,-18,-17,28,28,-29,-28,28,-27,]),'AND':([13,30,78,80,],[45,56,45,56,]),'MORE_THAN':([7,9,10,11,13,18,19,20,25,27,30,32,34,47,58,59,60,61,69,75,76,78,80,81,88,],[-59,-51,-14,-11,-15,-55,-12,-60,-47,-58,-16,-13,62,-8,-15,-54,-58,-16,-58,-58,-50,-15,-16,-46,-61,]),'FALSE':([0,2,3,4,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,25,26,27,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,78,79,80,81,82,83,85,86,87,88,89,91,92,94,95,96,99,100,102,104,],[30,-4,-25,-24,-59,-30,-51,-14,-11,-23,-15,-56,-57,-5,-55,-12,-60,-31,-6,-47,30,-58,-34,-16,61,-13,-37,-39,-7,30,-26,-22,30,61,-53,-52,61,61,80,-8,-49,61,-48,-20,-21,61,30,61,80,-15,-54,-58,-16,-42,-40,-43,61,-41,-44,-45,-58,-58,-50,-35,-15,-32,-16,-46,-10,-9,-36,-33,-38,-61,61,-19,-18,-17,30,30,-29,-28,30,-27,]),'FLOAT':([0,2,3,4,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,25,26,27,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,78,79,80,81,82,83,85,86,87,88,89,91,92,94,95,96,99,100,102,104,],[32,-4,-25,-24,-59,-30,-51,-14,-11,-23,-15,-56,-57,-5,-55,-12,-60,-31,-6,-47,32,-58,-34,-16,32,-13,-37,-39,-7,32,-26,-22,32,32,-53,-52,32,32,32,-8,-49,32,-48,-20,-21,32,32,32,32,-15,-54,-58,-16,-42,-40,-43,32,-41,-44,-45,-58,-58,-50,-35,-15,-32,-16,-46,-10,-9,-36,-33,-38,-61,32,-19,-18,-17,32,32,-29,-28,32,-27,]),'PLUS_ONE':([27,47,69,75,],[52,-8,52,52,]),'LEFT_PAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,78,79,80,81,82,83,85,86,87,88,91,92,94,95,96,99,100,102,104,],[36,-4,-25,-24,40,41,-59,-30,-51,-14,-11,-23,-15,-56,-57,-5,-55,-12,-60,-31,-6,-47,36,-58,55,-34,-16,36,-13,-37,-39,-7,36,-26,-22,36,36,-53,-52,36,36,36,-8,-49,36,-48,-20,-21,36,36,36,36,-15,-54,-58,-16,-42,-40,-43,36,-41,-44,-45,-58,-58,-50,-35,-15,-32,-16,-46,-10,-9,-36,-33,-38,-61,-19,-18,-17,36,36,-29,-28,36,-27,]),'MINUS_ONE':([27,47,69,75,],[53,-8,53,53,]),'OR':([13,30,],[46,57,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'varDeclaration':([0,26,95,96,102,],[2,2,2,2,2,]),'variableType':([0,26,31,36,40,41,44,45,46,49,54,55,56,57,65,89,95,96,102,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,94,7,7,7,]),'multiSign':([9,],[44,]),'matchedif':([0,26,95,96,102,],[3,3,3,3,3,]),'number':([0,26,31,36,40,41,44,45,46,49,54,55,56,57,65,89,95,96,102,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'loopStmt':([0,26,95,96,102,],[4,4,4,4,4,]),'sumSign':([25,],[49,]),'logicalExp':([0,26,36,40,55,95,96,102,],[8,8,8,72,84,8,8,8,]),'multiNegExp':([0,26,31,36,40,44,45,46,49,54,55,56,57,65,95,96,102,],[9,9,59,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'conditionalStmt':([0,26,95,96,102,],[12,12,12,12,12,]),'program':([0,],[15,]),'statement':([0,26,95,96,102,],[17,17,17,17,17,]),'factor':([0,26,31,36,40,41,44,45,46,49,54,55,56,57,65,95,96,102,],[18,18,18,18,18,74,18,18,18,18,18,18,18,18,18,18,18,18,]),'sumLessExpression':([0,26,36,41,95,96,102,],[21,21,21,73,21,21,21,]),'constDeclaration':([0,26,95,96,102,],[22,22,22,22,22,]),'declarationList':([0,26,95,96,102,],[23,51,97,98,103,]),'andExp':([0,26,36,40,46,55,57,95,96,102,],[29,29,29,29,79,29,86,29,29,29,]),'compSign':([34,],[65,]),'declaration':([0,26,95,96,102,],[26,26,26,26,26,]),'variable':([0,26,31,36,40,41,44,45,46,49,54,55,56,57,65,95,96,102,],[27,27,60,69,60,75,60,60,60,60,60,60,60,60,60,27,27,27,]),'term':([0,26,36,40,44,45,46,49,54,55,56,57,65,95,96,102,],[25,25,25,25,76,25,25,25,25,25,25,25,25,25,25,25,]),'unaryOp':([0,26,31,36,40,44,45,46,49,54,55,56,57,65,95,96,102,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'compExp':([0,26,36,40,45,46,55,56,57,95,96,102,],[33,33,33,33,77,33,33,85,33,33,33,33,]),'sumExp':([0,26,36,40,45,46,49,54,55,56,57,65,95,96,102,],[34,34,34,34,34,34,81,83,34,34,34,87,34,34,34,]),'funcDeclaration':([0,26,95,96,102,],[35,35,35,35,35,]),'unmatchedif':([0,26,95,96,102,],[37,37,37,37,37,]),'expression':([0,26,36,95,96,102,],[38,38,70,38,38,38,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declarationList','program',1,'p_program','perl_parser.py',67),
  ('declarationList -> declaration declarationList','declarationList',2,'p_declarationList','perl_parser.py',72),
  ('declarationList -> declaration','declarationList',1,'p_declarationList2','perl_parser.py',77),
  ('declaration -> varDeclaration','declaration',1,'p_declaration','perl_parser.py',82),
  ('declaration -> statement','declaration',1,'p_declaration2','perl_parser.py',87),
  ('declaration -> constDeclaration','declaration',1,'p_declaration3','perl_parser.py',92),
  ('declaration -> funcDeclaration','declaration',1,'p_declaration4','perl_parser.py',97),
  ('variable -> DOLLAR IDENTIFIER','variable',2,'p_variable','perl_parser.py',102),
  ('varDeclaration -> variable ASSIGN sumExp','varDeclaration',3,'p_varDeclaration','perl_parser.py',110),
  ('varDeclaration -> variable ASSIGN STDIN','varDeclaration',3,'p_varDeclaration2','perl_parser.py',136),
  ('variableType -> number','variableType',1,'p_variableType','perl_parser.py',147),
  ('number -> INTEGER','number',1,'p_number','perl_parser.py',152),
  ('number -> FLOAT','number',1,'p_number2','perl_parser.py',157),
  ('variableType -> STRING','variableType',1,'p_variableType2','perl_parser.py',161),
  ('variableType -> TRUE','variableType',1,'p_variableType3','perl_parser.py',167),
  ('variableType -> FALSE','variableType',1,'p_variableType4','perl_parser.py',173),
  ('constDeclaration -> USE CONSTANT IDENTIFIER CONST_ASSIGN variableType','constDeclaration',5,'p_constDeclaration','perl_parser.py',179),
  ('funcDeclaration -> PRINT LEFT_PAR factor RIGHT_PAR','funcDeclaration',4,'p_funcDeclaration','perl_parser.py',188),
  ('funcDeclaration -> PRINT LEFT_PAR sumLessExpression RIGHT_PAR','funcDeclaration',4,'p_funcDeclaration2','perl_parser.py',197),
  ('sumLessExpression -> variable PLUS_ONE','sumLessExpression',2,'p_sumLessExpression','perl_parser.py',206),
  ('sumLessExpression -> variable MINUS_ONE','sumLessExpression',2,'p_sumLessExpression1','perl_parser.py',212),
  ('statement -> expression','statement',1,'p_statement','perl_parser.py',218),
  ('statement -> conditionalStmt','statement',1,'p_statement2','perl_parser.py',223),
  ('statement -> loopStmt','statement',1,'p_statement3','perl_parser.py',228),
  ('conditionalStmt -> matchedif','conditionalStmt',1,'p_conditionalStmt','perl_parser.py',233),
  ('conditionalStmt -> unmatchedif','conditionalStmt',1,'p_conditionalStmt2','perl_parser.py',238),
  ('matchedif -> IF LEFT_PAR logicalExp RIGHT_PAR LEFT_BRACE declarationList RIGHT_BRACE ELSE LEFT_BRACE declarationList RIGHT_BRACE','matchedif',11,'p_matchedif','perl_parser.py',243),
  ('unmatchedif -> IF LEFT_PAR logicalExp RIGHT_PAR LEFT_BRACE declarationList RIGHT_BRACE','unmatchedif',7,'p_unmatchedif','perl_parser.py',257),
  ('loopStmt -> WHILE LEFT_PAR logicalExp RIGHT_PAR LEFT_BRACE declarationList RIGHT_BRACE','loopStmt',7,'p_loopStmt','perl_parser.py',267),
  ('expression -> logicalExp','expression',1,'p_expression2','perl_parser.py',283),
  ('expression -> sumLessExpression','expression',1,'p_expression3','perl_parser.py',288),
  ('logicalExp -> TRUE OR andExp','logicalExp',3,'p_logicalExp3','perl_parser.py',293),
  ('logicalExp -> FALSE OR andExp','logicalExp',3,'p_logicalExp4','perl_parser.py',300),
  ('logicalExp -> andExp','logicalExp',1,'p_logicalExp5','perl_parser.py',307),
  ('andExp -> TRUE AND compExp','andExp',3,'p_andExp3','perl_parser.py',314),
  ('andExp -> FALSE AND compExp','andExp',3,'p_andExp4','perl_parser.py',321),
  ('andExp -> compExp','andExp',1,'p_andExp5','perl_parser.py',328),
  ('compExp -> sumExp compSign sumExp','compExp',3,'p_compExp','perl_parser.py',333),
  ('compExp -> sumExp','compExp',1,'p_compExp2','perl_parser.py',338),
  ('compSign -> LESS_OR_EQUAL','compSign',1,'p_compSign','perl_parser.py',343),
  ('compSign -> LESS_THAN','compSign',1,'p_compSign2','perl_parser.py',349),
  ('compSign -> MORE_THAN','compSign',1,'p_compSign3','perl_parser.py',355),
  ('compSign -> GREATER_OR_EQUAL','compSign',1,'p_compSign4','perl_parser.py',361),
  ('compSign -> EQ','compSign',1,'p_compSign5','perl_parser.py',367),
  ('compSign -> NEQ','compSign',1,'p_compSign6','perl_parser.py',373),
  ('sumExp -> term sumSign sumExp','sumExp',3,'p_sumExp','perl_parser.py',379),
  ('sumExp -> term','sumExp',1,'p_sumExp2','perl_parser.py',384),
  ('sumSign -> MINUS','sumSign',1,'p_sumSign','perl_parser.py',389),
  ('sumSign -> PLUS','sumSign',1,'p_sumSign2','perl_parser.py',395),
  ('term -> multiNegExp multiSign term','term',3,'p_term','perl_parser.py',401),
  ('term -> multiNegExp','term',1,'p_term2','perl_parser.py',406),
  ('multiSign -> STAR','multiSign',1,'p_multiSign2','perl_parser.py',413),
  ('multiSign -> BETWEEN','multiSign',1,'p_multiSign3','perl_parser.py',419),
  ('multiNegExp -> unaryOp multiNegExp','multiNegExp',2,'p_multiNegExp','perl_parser.py',425),
  ('multiNegExp -> factor','multiNegExp',1,'p_multiNegExp2','perl_parser.py',430),
  ('unaryOp -> MINUS','unaryOp',1,'p_unaryOp','perl_parser.py',435),
  ('unaryOp -> PLUS','unaryOp',1,'p_unaryOp2','perl_parser.py',441),
  ('factor -> variable','factor',1,'p_factor','perl_parser.py',447),
  ('factor -> variableType','factor',1,'p_factor2','perl_parser.py',452),
  ('factor -> IDENTIFIER','factor',1,'p_factor3','perl_parser.py',457),
  ('factor -> LEFT_PAR expression RIGHT_PAR','factor',3,'p_factor4','perl_parser.py',464),
]
