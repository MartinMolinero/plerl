
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'SLR'

_lr_signature = 'programSTDIN AND PLUS_ONE MINUS_ONE STRING ASSIGN BETWEEN DOLLAR EQ FLOAT CONST_ASSIGN GREATER_OR_EQUAL IDENTIFIER INTEGER LEFT_BRACE LEFT_PAR LESS_OR_EQUAL LESS_THAN MINUS MORE_THAN NEQ OR PLUS RIGHT_BRACE RIGHT_PAR STAR USE CONSTANT PRINT FALSE IF TRUE WHILE ELSEprogram : declarationListdeclarationList :  declaration declarationListdeclarationList : declarationdeclaration : varDeclarationdeclaration : statementdeclaration : constDeclarationdeclaration : funcDeclarationvariable : DOLLAR IDENTIFIERvarDeclaration : variable ASSIGN logicalExpvarDeclaration : variable ASSIGN sumExpvarDeclaration : variable ASSIGN STDINvariableType : numbernumber : INTEGERnumber : FLOATvariableType : STRINGvariableType : TRUEvariableType : FALSEconstDeclaration : USE CONSTANT IDENTIFIER CONST_ASSIGN variableTypefuncDeclaration : PRINT LEFT_PAR factor RIGHT_PARfuncDeclaration : PRINT LEFT_PAR sumLessExpression RIGHT_PARsumLessExpression : variable PLUS_ONEsumLessExpression : variable MINUS_ONEstatement : expressionstatement : conditionalStmtstatement : loopStmtconditionalStmt : matchedifconditionalStmt : unmatchedifmatchedif : IF LEFT_PAR logicalExp RIGHT_PAR LEFT_BRACE declarationList RIGHT_BRACE ELSE LEFT_BRACE declarationList RIGHT_BRACEunmatchedif : IF LEFT_PAR logicalExp RIGHT_PAR LEFT_BRACE declarationList RIGHT_BRACEloopStmt : WHILE LEFT_PAR logicalExp RIGHT_PAR LEFT_BRACE declarationList RIGHT_BRACEexpression : logicalExpexpression : sumLessExpressionlogicalExp : factor OR andExplogicalExp : andExpandExp : factor AND compExpandExp : compExpcompExp : sumExp compSign sumExpcompExp : sumExpcompSign : LESS_OR_EQUALcompSign : LESS_THANcompSign : MORE_THANcompSign : GREATER_OR_EQUALcompSign : EQcompSign : NEQsumExp : term sumSign sumExpsumExp : termsumSign : MINUSsumSign : PLUSterm : multiNegExp multiSign termterm : multiNegExpmultiSign : STARmultiSign : BETWEENmultiNegExp : unaryOp multiNegExpmultiNegExp : factorunaryOp : MINUSunaryOp : PLUSfactor : variablefactor : variableTypefactor : IDENTIFIERfactor : LEFT_PAR expression RIGHT_PAR'
    
_lr_action_items = {'USE':([0,2,3,4,7,8,9,10,11,12,13,17,18,19,20,21,22,25,26,27,29,30,32,33,34,35,37,38,47,52,53,56,57,58,66,72,73,74,75,76,77,78,79,80,82,83,86,87,89,90,91,94,95,97,99,],[1,-4,-26,-25,-58,-31,-50,-15,-12,-24,-16,-5,-54,-13,-59,-32,-6,-46,1,-57,-34,-17,-14,-36,-38,-7,-27,-23,-8,-22,-21,-53,-54,-57,-57,-57,-49,-35,-54,-33,-45,-11,-9,-10,-37,-60,-20,-19,-18,1,1,-30,-29,1,-28,]),'CONSTANT':([1,],[39,]),'LESS_OR_EQUAL':([7,9,10,11,13,18,19,20,25,27,30,32,34,47,56,57,58,66,72,73,75,77,80,83,],[-58,-50,-15,-12,-16,-54,-13,-59,-46,-57,-17,-14,60,-8,-53,-54,-57,-57,-57,-49,-54,-45,60,-60,]),'RIGHT_PAR':([7,8,9,10,11,13,18,19,20,21,25,27,29,30,32,33,34,47,52,53,56,57,58,66,67,69,70,71,72,73,74,75,76,77,80,81,82,83,],[-58,-31,-50,-15,-12,-16,-54,-13,-59,-32,-46,-57,-34,-17,-14,-36,-38,-8,-22,-21,-53,-54,-57,-57,83,85,86,87,-57,-49,-35,-54,-33,-45,-38,88,-37,-60,]),'RIGHT_BRACE':([2,3,4,7,8,9,10,11,12,13,17,18,19,20,21,22,25,26,27,29,30,32,33,34,35,37,38,47,51,52,53,56,57,58,66,72,73,74,75,76,77,78,79,80,82,83,86,87,89,92,93,94,95,98,99,],[-4,-26,-25,-58,-31,-50,-15,-12,-24,-16,-5,-54,-13,-59,-32,-6,-46,-3,-57,-34,-17,-14,-36,-38,-7,-27,-23,-8,-2,-22,-21,-53,-54,-57,-57,-57,-49,-35,-54,-33,-45,-11,-9,-10,-37,-60,-20,-19,-18,94,95,-30,-29,99,-28,]),'WHILE':([0,2,3,4,7,8,9,10,11,12,13,17,18,19,20,21,22,25,26,27,29,30,32,33,34,35,37,38,47,52,53,56,57,58,66,72,73,74,75,76,77,78,79,80,82,83,86,87,89,90,91,94,95,97,99,],[5,-4,-26,-25,-58,-31,-50,-15,-12,-24,-16,-5,-54,-13,-59,-32,-6,-46,5,-57,-34,-17,-14,-36,-38,-7,-27,-23,-8,-22,-21,-53,-54,-57,-57,-57,-49,-35,-54,-33,-45,-11,-9,-10,-37,-60,-20,-19,-18,5,5,-30,-29,5,-28,]),'LEFT_BRACE':([85,88,96,],[90,91,97,]),'PRINT':([0,2,3,4,7,8,9,10,11,12,13,17,18,19,20,21,22,25,26,27,29,30,32,33,34,35,37,38,47,52,53,56,57,58,66,72,73,74,75,76,77,78,79,80,82,83,86,87,89,90,91,94,95,97,99,],[6,-4,-26,-25,-58,-31,-50,-15,-12,-24,-16,-5,-54,-13,-59,-32,-6,-46,6,-57,-34,-17,-14,-36,-38,-7,-27,-23,-8,-22,-21,-53,-54,-57,-57,-57,-49,-35,-54,-33,-45,-11,-9,-10,-37,-60,-20,-19,-18,6,6,-30,-29,6,-28,]),'STAR':([7,9,10,11,13,18,19,20,27,30,32,47,56,57,58,66,72,75,83,],[-58,43,-15,-12,-16,-54,-13,-59,-57,-17,-14,-8,-53,-54,-57,-57,-57,-54,-60,]),'LESS_THAN':([7,9,10,11,13,18,19,20,25,27,30,32,34,47,56,57,58,66,72,73,75,77,80,83,],[-58,-50,-15,-12,-16,-54,-13,-59,-46,-57,-17,-14,63,-8,-53,-54,-57,-57,-57,-49,-54,-45,63,-60,]),'TRUE':([0,2,3,4,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,25,26,27,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,73,74,75,76,77,78,79,80,82,83,84,86,87,89,90,91,94,95,97,99,],[13,-4,-26,-25,-58,-31,-50,-15,-12,-24,-16,-55,-56,-5,-54,-13,-59,-32,-6,-46,13,-57,-34,-17,13,-14,-36,-38,-7,13,-27,-23,13,13,-52,-51,13,13,13,-8,-48,13,-47,-22,-21,13,13,-53,-54,-57,-41,-39,-42,13,-40,-43,-44,-57,-57,-49,-35,-54,-33,-45,-11,-9,-10,-37,-60,13,-20,-19,-18,13,13,-30,-29,13,-28,]),'MINUS':([0,2,3,4,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,25,26,27,29,30,31,32,33,34,35,36,37,38,40,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,73,74,75,76,77,78,79,80,82,83,86,87,89,90,91,94,95,97,99,],[14,-4,-26,-25,-58,-31,-50,-15,-12,-24,-16,-55,-56,-5,-54,-13,-59,-32,-6,50,14,-57,-34,-17,14,-14,-36,-38,-7,14,-27,-23,14,-52,-51,14,14,14,-8,-48,14,-47,-22,-21,14,14,-53,-54,-57,-41,-39,-42,14,-40,-43,-44,-57,-57,-49,-35,-54,-33,-45,-11,-9,-10,-37,-60,-20,-19,-18,14,14,-30,-29,14,-28,]),'NEQ':([7,9,10,11,13,18,19,20,25,27,30,32,34,47,56,57,58,66,72,73,75,77,80,83,],[-58,-50,-15,-12,-16,-54,-13,-59,-46,-57,-17,-14,65,-8,-53,-54,-57,-57,-57,-49,-54,-45,65,-60,]),'CONST_ASSIGN':([68,],[84,]),'PLUS':([0,2,3,4,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,25,26,27,29,30,31,32,33,34,35,36,37,38,40,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,73,74,75,76,77,78,79,80,82,83,86,87,89,90,91,94,95,97,99,],[16,-4,-26,-25,-58,-31,-50,-15,-12,-24,-16,-55,-56,-5,-54,-13,-59,-32,-6,48,16,-57,-34,-17,16,-14,-36,-38,-7,16,-27,-23,16,-52,-51,16,16,16,-8,-48,16,-47,-22,-21,16,16,-53,-54,-57,-41,-39,-42,16,-40,-43,-44,-57,-57,-49,-35,-54,-33,-45,-11,-9,-10,-37,-60,-20,-19,-18,16,16,-30,-29,16,-28,]),'INTEGER':([0,2,3,4,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,25,26,27,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,73,74,75,76,77,78,79,80,82,83,84,86,87,89,90,91,94,95,97,99,],[19,-4,-26,-25,-58,-31,-50,-15,-12,-24,-16,-55,-56,-5,-54,-13,-59,-32,-6,-46,19,-57,-34,-17,19,-14,-36,-38,-7,19,-27,-23,19,19,-52,-51,19,19,19,-8,-48,19,-47,-22,-21,19,19,-53,-54,-57,-41,-39,-42,19,-40,-43,-44,-57,-57,-49,-35,-54,-33,-45,-11,-9,-10,-37,-60,19,-20,-19,-18,19,19,-30,-29,19,-28,]),'IDENTIFIER':([0,2,3,4,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,73,74,75,76,77,78,79,80,82,83,86,87,89,90,91,94,95,97,99,],[20,-4,-26,-25,-58,-31,-50,-15,-12,-24,-16,-55,-56,-5,-54,-13,-59,-32,-6,47,-46,20,-57,-34,-17,20,-14,-36,-38,-7,20,-27,-23,68,20,20,-52,-51,20,20,20,-8,-48,20,-47,-22,-21,20,20,-53,-54,-57,-41,-39,-42,20,-40,-43,-44,-57,-57,-49,-35,-54,-33,-45,-11,-9,-10,-37,-60,-20,-19,-18,20,20,-30,-29,20,-28,]),'ASSIGN':([27,47,],[54,-8,]),'$end':([2,3,4,7,8,9,10,11,12,13,15,17,18,19,20,21,22,23,25,26,27,29,30,32,33,34,35,37,38,47,51,52,53,56,57,58,66,72,73,74,75,76,77,78,79,80,82,83,86,87,89,94,95,99,],[-4,-26,-25,-58,-31,-50,-15,-12,-24,-16,0,-5,-54,-13,-59,-32,-6,-1,-46,-3,-57,-34,-17,-14,-36,-38,-7,-27,-23,-8,-2,-22,-21,-53,-54,-57,-57,-57,-49,-35,-54,-33,-45,-11,-9,-10,-37,-60,-20,-19,-18,-30,-29,-28,]),'STDIN':([54,],[78,]),'STRING':([0,2,3,4,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,25,26,27,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,73,74,75,76,77,78,79,80,82,83,84,86,87,89,90,91,94,95,97,99,],[10,-4,-26,-25,-58,-31,-50,-15,-12,-24,-16,-55,-56,-5,-54,-13,-59,-32,-6,-46,10,-57,-34,-17,10,-14,-36,-38,-7,10,-27,-23,10,10,-52,-51,10,10,10,-8,-48,10,-47,-22,-21,10,10,-53,-54,-57,-41,-39,-42,10,-40,-43,-44,-57,-57,-49,-35,-54,-33,-45,-11,-9,-10,-37,-60,10,-20,-19,-18,10,10,-30,-29,10,-28,]),'GREATER_OR_EQUAL':([7,9,10,11,13,18,19,20,25,27,30,32,34,47,56,57,58,66,72,73,75,77,80,83,],[-58,-50,-15,-12,-16,-54,-13,-59,-46,-57,-17,-14,61,-8,-53,-54,-57,-57,-57,-49,-54,-45,61,-60,]),'DOLLAR':([0,2,3,4,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,25,26,27,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,73,74,75,76,77,78,79,80,82,83,86,87,89,90,91,94,95,97,99,],[24,-4,-26,-25,-58,-31,-50,-15,-12,-24,-16,-55,-56,-5,-54,-13,-59,-32,-6,-46,24,-57,-34,-17,24,-14,-36,-38,-7,24,-27,-23,24,24,-52,-51,24,24,24,-8,-48,24,-47,-22,-21,24,24,-53,-54,-57,-41,-39,-42,24,-40,-43,-44,-57,-57,-49,-35,-54,-33,-45,-11,-9,-10,-37,-60,-20,-19,-18,24,24,-30,-29,24,-28,]),'ELSE':([95,],[96,]),'BETWEEN':([7,9,10,11,13,18,19,20,27,30,32,47,56,57,58,66,72,75,83,],[-58,42,-15,-12,-16,-54,-13,-59,-57,-17,-14,-8,-53,-54,-57,-57,-57,-54,-60,]),'EQ':([7,9,10,11,13,18,19,20,25,27,30,32,34,47,56,57,58,66,72,73,75,77,80,83,],[-58,-50,-15,-12,-16,-54,-13,-59,-46,-57,-17,-14,64,-8,-53,-54,-57,-57,-57,-49,-54,-45,64,-60,]),'IF':([0,2,3,4,7,8,9,10,11,12,13,17,18,19,20,21,22,25,26,27,29,30,32,33,34,35,37,38,47,52,53,56,57,58,66,72,73,74,75,76,77,78,79,80,82,83,86,87,89,90,91,94,95,97,99,],[28,-4,-26,-25,-58,-31,-50,-15,-12,-24,-16,-5,-54,-13,-59,-32,-6,-46,28,-57,-34,-17,-14,-36,-38,-7,-27,-23,-8,-22,-21,-53,-54,-57,-57,-57,-49,-35,-54,-33,-45,-11,-9,-10,-37,-60,-20,-19,-18,28,28,-30,-29,28,-28,]),'AND':([7,10,11,13,18,19,20,27,30,32,47,58,66,72,75,83,],[-58,-15,-12,-16,45,-13,-59,-57,-17,-14,-8,-57,-57,-57,45,-60,]),'MORE_THAN':([7,9,10,11,13,18,19,20,25,27,30,32,34,47,56,57,58,66,72,73,75,77,80,83,],[-58,-50,-15,-12,-16,-54,-13,-59,-46,-57,-17,-14,59,-8,-53,-54,-57,-57,-57,-49,-54,-45,59,-60,]),'FALSE':([0,2,3,4,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,25,26,27,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,73,74,75,76,77,78,79,80,82,83,84,86,87,89,90,91,94,95,97,99,],[30,-4,-26,-25,-58,-31,-50,-15,-12,-24,-16,-55,-56,-5,-54,-13,-59,-32,-6,-46,30,-57,-34,-17,30,-14,-36,-38,-7,30,-27,-23,30,30,-52,-51,30,30,30,-8,-48,30,-47,-22,-21,30,30,-53,-54,-57,-41,-39,-42,30,-40,-43,-44,-57,-57,-49,-35,-54,-33,-45,-11,-9,-10,-37,-60,30,-20,-19,-18,30,30,-30,-29,30,-28,]),'FLOAT':([0,2,3,4,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,25,26,27,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,73,74,75,76,77,78,79,80,82,83,84,86,87,89,90,91,94,95,97,99,],[32,-4,-26,-25,-58,-31,-50,-15,-12,-24,-16,-55,-56,-5,-54,-13,-59,-32,-6,-46,32,-57,-34,-17,32,-14,-36,-38,-7,32,-27,-23,32,32,-52,-51,32,32,32,-8,-48,32,-47,-22,-21,32,32,-53,-54,-57,-41,-39,-42,32,-40,-43,-44,-57,-57,-49,-35,-54,-33,-45,-11,-9,-10,-37,-60,32,-20,-19,-18,32,32,-30,-29,32,-28,]),'PLUS_ONE':([27,47,66,72,],[53,-8,53,53,]),'LEFT_PAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,73,74,75,76,77,78,79,80,82,83,86,87,89,90,91,94,95,97,99,],[36,-4,-26,-25,40,41,-58,-31,-50,-15,-12,-24,-16,-55,-56,-5,-54,-13,-59,-32,-6,-46,36,-57,55,-34,-17,36,-14,-36,-38,-7,36,-27,-23,36,36,-52,-51,36,36,36,-8,-48,36,-47,-22,-21,36,36,-53,-54,-57,-41,-39,-42,36,-40,-43,-44,-57,-57,-49,-35,-54,-33,-45,-11,-9,-10,-37,-60,-20,-19,-18,36,36,-30,-29,36,-28,]),'MINUS_ONE':([27,47,66,72,],[52,-8,52,52,]),'OR':([7,10,11,13,18,19,20,27,30,32,47,58,66,72,83,],[-58,-15,-12,-16,46,-13,-59,-57,-17,-14,-8,-57,-57,-57,-60,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'varDeclaration':([0,26,90,91,97,],[2,2,2,2,2,]),'variableType':([0,26,31,36,40,41,44,45,46,49,54,55,62,84,90,91,97,],[7,7,7,7,7,7,7,7,7,7,7,7,7,89,7,7,7,]),'multiSign':([9,],[44,]),'matchedif':([0,26,90,91,97,],[3,3,3,3,3,]),'number':([0,26,31,36,40,41,44,45,46,49,54,55,62,84,90,91,97,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'loopStmt':([0,26,90,91,97,],[4,4,4,4,4,]),'sumSign':([25,],[49,]),'logicalExp':([0,26,36,40,54,55,90,91,97,],[8,8,8,69,79,81,8,8,8,]),'multiNegExp':([0,26,31,36,40,44,45,46,49,54,55,62,90,91,97,],[9,9,56,9,9,9,9,9,9,9,9,9,9,9,9,]),'conditionalStmt':([0,26,90,91,97,],[12,12,12,12,12,]),'program':([0,],[15,]),'statement':([0,26,90,91,97,],[17,17,17,17,17,]),'factor':([0,26,31,36,40,41,44,45,46,49,54,55,62,90,91,97,],[18,18,57,18,18,71,57,57,75,57,18,18,57,18,18,18,]),'sumLessExpression':([0,26,36,41,90,91,97,],[21,21,21,70,21,21,21,]),'constDeclaration':([0,26,90,91,97,],[22,22,22,22,22,]),'declarationList':([0,26,90,91,97,],[23,51,92,93,98,]),'term':([0,26,36,40,44,45,46,49,54,55,62,90,91,97,],[25,25,25,25,73,25,25,25,25,25,25,25,25,25,]),'compSign':([34,80,],[62,62,]),'declaration':([0,26,90,91,97,],[26,26,26,26,26,]),'variable':([0,26,31,36,40,41,44,45,46,49,54,55,62,90,91,97,],[27,27,58,66,58,72,58,58,58,58,58,58,58,27,27,27,]),'andExp':([0,26,36,40,46,54,55,90,91,97,],[29,29,29,29,76,29,29,29,29,29,]),'unaryOp':([0,26,31,36,40,44,45,46,49,54,55,62,90,91,97,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'compExp':([0,26,36,40,45,46,54,55,90,91,97,],[33,33,33,33,74,33,33,33,33,33,33,]),'sumExp':([0,26,36,40,45,46,49,54,55,62,90,91,97,],[34,34,34,34,34,34,77,80,34,82,34,34,34,]),'funcDeclaration':([0,26,90,91,97,],[35,35,35,35,35,]),'unmatchedif':([0,26,90,91,97,],[37,37,37,37,37,]),'expression':([0,26,36,90,91,97,],[38,38,67,38,38,38,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declarationList','program',1,'p_program','perl_parser.py',77),
  ('declarationList -> declaration declarationList','declarationList',2,'p_declarationList','perl_parser.py',82),
  ('declarationList -> declaration','declarationList',1,'p_declarationList2','perl_parser.py',87),
  ('declaration -> varDeclaration','declaration',1,'p_declaration','perl_parser.py',92),
  ('declaration -> statement','declaration',1,'p_declaration2','perl_parser.py',97),
  ('declaration -> constDeclaration','declaration',1,'p_declaration3','perl_parser.py',102),
  ('declaration -> funcDeclaration','declaration',1,'p_declaration4','perl_parser.py',107),
  ('variable -> DOLLAR IDENTIFIER','variable',2,'p_variable','perl_parser.py',112),
  ('varDeclaration -> variable ASSIGN logicalExp','varDeclaration',3,'p_varDeclaration','perl_parser.py',120),
  ('varDeclaration -> variable ASSIGN sumExp','varDeclaration',3,'p_varDeclaration1','perl_parser.py',145),
  ('varDeclaration -> variable ASSIGN STDIN','varDeclaration',3,'p_varDeclaration2','perl_parser.py',187),
  ('variableType -> number','variableType',1,'p_variableType','perl_parser.py',197),
  ('number -> INTEGER','number',1,'p_number','perl_parser.py',202),
  ('number -> FLOAT','number',1,'p_number2','perl_parser.py',207),
  ('variableType -> STRING','variableType',1,'p_variableType2','perl_parser.py',211),
  ('variableType -> TRUE','variableType',1,'p_variableType3','perl_parser.py',216),
  ('variableType -> FALSE','variableType',1,'p_variableType4','perl_parser.py',222),
  ('constDeclaration -> USE CONSTANT IDENTIFIER CONST_ASSIGN variableType','constDeclaration',5,'p_constDeclaration','perl_parser.py',227),
  ('funcDeclaration -> PRINT LEFT_PAR factor RIGHT_PAR','funcDeclaration',4,'p_funcDeclaration','perl_parser.py',252),
  ('funcDeclaration -> PRINT LEFT_PAR sumLessExpression RIGHT_PAR','funcDeclaration',4,'p_funcDeclaration2','perl_parser.py',261),
  ('sumLessExpression -> variable PLUS_ONE','sumLessExpression',2,'p_sumLessExpression','perl_parser.py',271),
  ('sumLessExpression -> variable MINUS_ONE','sumLessExpression',2,'p_sumLessExpression1','perl_parser.py',289),
  ('statement -> expression','statement',1,'p_statement','perl_parser.py',306),
  ('statement -> conditionalStmt','statement',1,'p_statement2','perl_parser.py',310),
  ('statement -> loopStmt','statement',1,'p_statement3','perl_parser.py',314),
  ('conditionalStmt -> matchedif','conditionalStmt',1,'p_conditionalStmt','perl_parser.py',318),
  ('conditionalStmt -> unmatchedif','conditionalStmt',1,'p_conditionalStmt2','perl_parser.py',322),
  ('matchedif -> IF LEFT_PAR logicalExp RIGHT_PAR LEFT_BRACE declarationList RIGHT_BRACE ELSE LEFT_BRACE declarationList RIGHT_BRACE','matchedif',11,'p_matchedif','perl_parser.py',326),
  ('unmatchedif -> IF LEFT_PAR logicalExp RIGHT_PAR LEFT_BRACE declarationList RIGHT_BRACE','unmatchedif',7,'p_unmatchedif','perl_parser.py',339),
  ('loopStmt -> WHILE LEFT_PAR logicalExp RIGHT_PAR LEFT_BRACE declarationList RIGHT_BRACE','loopStmt',7,'p_loopStmt','perl_parser.py',348),
  ('expression -> logicalExp','expression',1,'p_expression2','perl_parser.py',363),
  ('expression -> sumLessExpression','expression',1,'p_expression3','perl_parser.py',367),
  ('logicalExp -> factor OR andExp','logicalExp',3,'p_logicalExp3','perl_parser.py',371),
  ('logicalExp -> andExp','logicalExp',1,'p_logicalExp5','perl_parser.py',387),
  ('andExp -> factor AND compExp','andExp',3,'p_andExp3','perl_parser.py',393),
  ('andExp -> compExp','andExp',1,'p_andExp5','perl_parser.py',409),
  ('compExp -> sumExp compSign sumExp','compExp',3,'p_compExp','perl_parser.py',414),
  ('compExp -> sumExp','compExp',1,'p_compExp2','perl_parser.py',440),
  ('compSign -> LESS_OR_EQUAL','compSign',1,'p_compSign','perl_parser.py',445),
  ('compSign -> LESS_THAN','compSign',1,'p_compSign2','perl_parser.py',450),
  ('compSign -> MORE_THAN','compSign',1,'p_compSign3','perl_parser.py',455),
  ('compSign -> GREATER_OR_EQUAL','compSign',1,'p_compSign4','perl_parser.py',460),
  ('compSign -> EQ','compSign',1,'p_compSign5','perl_parser.py',465),
  ('compSign -> NEQ','compSign',1,'p_compSign6','perl_parser.py',470),
  ('sumExp -> term sumSign sumExp','sumExp',3,'p_sumExp','perl_parser.py',474),
  ('sumExp -> term','sumExp',1,'p_sumExp2','perl_parser.py',499),
  ('sumSign -> MINUS','sumSign',1,'p_sumSign','perl_parser.py',505),
  ('sumSign -> PLUS','sumSign',1,'p_sumSign2','perl_parser.py',511),
  ('term -> multiNegExp multiSign term','term',3,'p_term','perl_parser.py',517),
  ('term -> multiNegExp','term',1,'p_term2','perl_parser.py',541),
  ('multiSign -> STAR','multiSign',1,'p_multiSign2','perl_parser.py',549),
  ('multiSign -> BETWEEN','multiSign',1,'p_multiSign3','perl_parser.py',554),
  ('multiNegExp -> unaryOp multiNegExp','multiNegExp',2,'p_multiNegExp','perl_parser.py',559),
  ('multiNegExp -> factor','multiNegExp',1,'p_multiNegExp2','perl_parser.py',569),
  ('unaryOp -> MINUS','unaryOp',1,'p_unaryOp','perl_parser.py',575),
  ('unaryOp -> PLUS','unaryOp',1,'p_unaryOp2','perl_parser.py',580),
  ('factor -> variable','factor',1,'p_factor','perl_parser.py',585),
  ('factor -> variableType','factor',1,'p_factor2','perl_parser.py',601),
  ('factor -> IDENTIFIER','factor',1,'p_factor3','perl_parser.py',606),
  ('factor -> LEFT_PAR expression RIGHT_PAR','factor',3,'p_factor4','perl_parser.py',618),
]
