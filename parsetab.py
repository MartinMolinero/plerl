
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'SLR'

_lr_signature = 'programrightASSIGNrightEQleftNEQleftLESS_THANLESS_OR_EQUALGREATER_OR_EQUALMORE_THANleftPLUSMINUSleftBETWEENSTARSTDIN AND PLUS_ONE MINUS_ONE STRING ASSIGN BETWEEN DOLLAR EQ EXP FLOAT CONST_ASSIGN GREATER_OR_EQUAL IDENTIFIER INTEGER LEFT_BRACE LEFT_PAR LESS_OR_EQUAL LESS_THAN MINUS MORE_THAN NEQ OR PLUS RIGHT_BRACE RIGHT_PAR STAR USE CONSTANT PRINT FALSE IF TRUE WHILE ELSEprogram : declarationListdeclarationList :  declaration declarationListdeclarationList : declarationdeclaration : varDeclarationdeclaration : statementdeclaration : constDeclarationdeclaration : funcDeclarationvariable : DOLLAR IDENTIFIERvarDeclaration : variable ASSIGN variableTypevarDeclaration : variable ASSIGN STDINnumber : INTEGERnumber : FLOATvariableType : numbervariableType : STRINGvariableType : TRUEvariableType : FALSEconstDeclaration : USE CONSTANT IDENTIFIER CONST_ASSIGN variableTypefuncDeclaration : PRINT LEFT_PAR factor RIGHT_PARfuncDeclaration : PRINT LEFT_PAR sumLessExpression RIGHT_PARsumLessExpression : variable PLUS_ONEsumLessExpression : variable MINUS_ONEstatement : expressionstatement : conditionalStmtstatement : loopStmtconditionalStmt : matchedifconditionalStmt : unmatchedifmatchedif : IF LEFT_PAR logicalExp RIGHT_PAR LEFT_BRACE declarationList RIGHT_BRACE ELSE LEFT_BRACE declarationList RIGHT_BRACEunmatchedif : IF LEFT_PAR logicalExp RIGHT_PAR LEFT_BRACE declarationList RIGHT_BRACEloopStmt : WHILE LEFT_PAR logicalExp RIGHT_PAR LEFT_BRACE declarationList RIGHT_BRACEexpression : logicalExpexpression : sumLessExpressionlogicalExp : TRUE OR andExplogicalExp : FALSE OR andExplogicalExp : andExpandExp : TRUE AND compExpandExp : FALSE AND compExpandExp : compExpcompExp : sumExp compSign sumExpcompExp : sumExpcompSign : LESS_OR_EQUALcompSign : LESS_THANcompSign : MORE_THANcompSign : GREATER_OR_EQUALcompSign : EQcompSign : NEQsumExp : term sumSign sumExpsumExp : termsumSign : MINUSsumSign : PLUSterm : multiNegExp multiSign termterm : multiNegExpmultiSign : EXPmultiSign : STARmultiSign : BETWEENmultiNegExp : unaryOp multiNegExpmultiNegExp : factorunaryOp : MINUSunaryOp : PLUSfactor : variablefactor : variableTypefactor : IDENTIFIERfactor : LEFT_PAR expression RIGHT_PAR'
    
_lr_action_items = {'USE':([0,2,3,4,5,8,9,10,11,12,13,17,18,19,20,21,22,25,26,27,29,30,32,33,34,35,37,38,48,53,54,59,60,61,62,70,76,77,78,79,80,81,82,83,84,86,87,88,89,92,93,95,96,97,100,101,103,105,],[1,-4,-60,-25,-24,-30,-51,-14,-13,-23,-15,-5,-56,-11,-61,-31,-6,-47,1,-59,-34,-16,-12,-37,-39,-7,-26,-22,-8,-20,-21,-15,-55,-59,-16,-59,-59,-50,-35,-15,-32,-16,-46,-9,-10,-36,-33,-38,-62,-19,-18,-17,1,1,-29,-28,1,-27,]),'CONSTANT':([1,],[39,]),'LESS_OR_EQUAL':([3,9,10,11,13,18,19,20,25,27,30,32,34,48,59,60,61,62,70,76,77,79,81,82,89,],[-60,-51,-14,-13,-15,-56,-11,-61,-47,-59,-16,-12,64,-8,-15,-55,-59,-16,-59,-59,-50,-15,-16,-46,-62,]),'RIGHT_PAR':([3,8,9,10,11,13,18,19,20,21,25,27,29,30,32,33,34,48,53,54,59,60,61,62,70,71,73,74,75,76,77,78,79,80,81,82,85,86,87,88,89,],[-60,-30,-51,-14,-13,-15,-56,-11,-61,-31,-47,-59,-34,-16,-12,-37,-39,-8,-20,-21,-15,-55,-59,-16,-59,89,91,92,93,-59,-50,-35,-15,-32,-16,-46,94,-36,-33,-38,-62,]),'RIGHT_BRACE':([2,3,4,5,8,9,10,11,12,13,17,18,19,20,21,22,25,26,27,29,30,32,33,34,35,37,38,48,52,53,54,59,60,61,62,70,76,77,78,79,80,81,82,83,84,86,87,88,89,92,93,95,98,99,100,101,104,105,],[-4,-60,-25,-24,-30,-51,-14,-13,-23,-15,-5,-56,-11,-61,-31,-6,-47,-3,-59,-34,-16,-12,-37,-39,-7,-26,-22,-8,-2,-20,-21,-15,-55,-59,-16,-59,-59,-50,-35,-15,-32,-16,-46,-9,-10,-36,-33,-38,-62,-19,-18,-17,100,101,-29,-28,105,-27,]),'WHILE':([0,2,3,4,5,8,9,10,11,12,13,17,18,19,20,21,22,25,26,27,29,30,32,33,34,35,37,38,48,53,54,59,60,61,62,70,76,77,78,79,80,81,82,83,84,86,87,88,89,92,93,95,96,97,100,101,103,105,],[6,-4,-60,-25,-24,-30,-51,-14,-13,-23,-15,-5,-56,-11,-61,-31,-6,-47,6,-59,-34,-16,-12,-37,-39,-7,-26,-22,-8,-20,-21,-15,-55,-59,-16,-59,-59,-50,-35,-15,-32,-16,-46,-9,-10,-36,-33,-38,-62,-19,-18,-17,6,6,-29,-28,6,-27,]),'LEFT_BRACE':([91,94,102,],[96,97,103,]),'EXP':([3,9,10,11,13,18,19,20,27,30,32,48,59,60,61,62,70,76,79,81,89,],[-60,44,-14,-13,-15,-56,-11,-61,-59,-16,-12,-8,-15,-55,-59,-16,-59,-59,-15,-16,-62,]),'PRINT':([0,2,3,4,5,8,9,10,11,12,13,17,18,19,20,21,22,25,26,27,29,30,32,33,34,35,37,38,48,53,54,59,60,61,62,70,76,77,78,79,80,81,82,83,84,86,87,88,89,92,93,95,96,97,100,101,103,105,],[7,-4,-60,-25,-24,-30,-51,-14,-13,-23,-15,-5,-56,-11,-61,-31,-6,-47,7,-59,-34,-16,-12,-37,-39,-7,-26,-22,-8,-20,-21,-15,-55,-59,-16,-59,-59,-50,-35,-15,-32,-16,-46,-9,-10,-36,-33,-38,-62,-19,-18,-17,7,7,-29,-28,7,-27,]),'STAR':([3,9,10,11,13,18,19,20,27,30,32,48,59,60,61,62,70,76,79,81,89,],[-60,42,-14,-13,-15,-56,-11,-61,-59,-16,-12,-8,-15,-55,-59,-16,-59,-59,-15,-16,-62,]),'LESS_THAN':([3,9,10,11,13,18,19,20,25,27,30,32,34,48,59,60,61,62,70,76,77,79,81,82,89,],[-60,-51,-14,-13,-15,-56,-11,-61,-47,-59,-16,-12,67,-8,-15,-55,-59,-16,-59,-59,-50,-15,-16,-46,-62,]),'TRUE':([0,2,3,4,5,8,9,10,11,12,13,14,16,17,18,19,20,21,22,25,26,27,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,76,77,78,79,80,81,82,83,84,86,87,88,89,90,92,93,95,96,97,100,101,103,105,],[13,-4,-60,-25,-24,-30,-51,-14,-13,-23,-15,-57,-58,-5,-56,-11,-61,-31,-6,-47,13,-59,-34,-16,59,-12,-37,-39,-7,13,-26,-22,13,59,-53,59,-52,-54,59,79,-8,-49,59,-48,-20,-21,59,13,59,79,-15,-55,-59,-16,-42,-40,-43,59,-41,-44,-45,-59,-59,-50,-35,-15,-32,-16,-46,-9,-10,-36,-33,-38,-62,59,-19,-18,-17,13,13,-29,-28,13,-27,]),'MINUS':([0,2,3,4,5,8,9,10,11,12,13,14,16,17,18,19,20,21,22,25,26,27,29,30,31,32,33,34,35,36,37,38,40,42,43,44,45,46,47,48,49,50,51,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,76,77,78,79,80,81,82,83,84,86,87,88,89,92,93,95,96,97,100,101,103,105,],[14,-4,-60,-25,-24,-30,-51,-14,-13,-23,-15,-57,-58,-5,-56,-11,-61,-31,-6,51,14,-59,-34,-16,14,-12,-37,-39,-7,14,-26,-22,14,-53,14,-52,-54,14,14,-8,-49,14,-48,-20,-21,14,14,14,-15,-55,-59,-16,-42,-40,-43,14,-41,-44,-45,-59,-59,-50,-35,-15,-32,-16,-46,-9,-10,-36,-33,-38,-62,-19,-18,-17,14,14,-29,-28,14,-27,]),'NEQ':([3,9,10,11,13,18,19,20,25,27,30,32,34,48,59,60,61,62,70,76,77,79,81,82,89,],[-60,-51,-14,-13,-15,-56,-11,-61,-47,-59,-16,-12,69,-8,-15,-55,-59,-16,-59,-59,-50,-15,-16,-46,-62,]),'CONST_ASSIGN':([72,],[90,]),'PLUS':([0,2,3,4,5,8,9,10,11,12,13,14,16,17,18,19,20,21,22,25,26,27,29,30,31,32,33,34,35,36,37,38,40,42,43,44,45,46,47,48,49,50,51,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,76,77,78,79,80,81,82,83,84,86,87,88,89,92,93,95,96,97,100,101,103,105,],[16,-4,-60,-25,-24,-30,-51,-14,-13,-23,-15,-57,-58,-5,-56,-11,-61,-31,-6,49,16,-59,-34,-16,16,-12,-37,-39,-7,16,-26,-22,16,-53,16,-52,-54,16,16,-8,-49,16,-48,-20,-21,16,16,16,-15,-55,-59,-16,-42,-40,-43,16,-41,-44,-45,-59,-59,-50,-35,-15,-32,-16,-46,-9,-10,-36,-33,-38,-62,-19,-18,-17,16,16,-29,-28,16,-27,]),'INTEGER':([0,2,3,4,5,8,9,10,11,12,13,14,16,17,18,19,20,21,22,25,26,27,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,76,77,78,79,80,81,82,83,84,86,87,88,89,90,92,93,95,96,97,100,101,103,105,],[19,-4,-60,-25,-24,-30,-51,-14,-13,-23,-15,-57,-58,-5,-56,-11,-61,-31,-6,-47,19,-59,-34,-16,19,-12,-37,-39,-7,19,-26,-22,19,19,-53,19,-52,-54,19,19,-8,-49,19,-48,-20,-21,19,19,19,19,-15,-55,-59,-16,-42,-40,-43,19,-41,-44,-45,-59,-59,-50,-35,-15,-32,-16,-46,-9,-10,-36,-33,-38,-62,19,-19,-18,-17,19,19,-29,-28,19,-27,]),'IDENTIFIER':([0,2,3,4,5,8,9,10,11,12,13,14,16,17,18,19,20,21,22,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,76,77,78,79,80,81,82,83,84,86,87,88,89,92,93,95,96,97,100,101,103,105,],[20,-4,-60,-25,-24,-30,-51,-14,-13,-23,-15,-57,-58,-5,-56,-11,-61,-31,-6,48,-47,20,-59,-34,-16,20,-12,-37,-39,-7,20,-26,-22,72,20,20,-53,20,-52,-54,20,20,-8,-49,20,-48,-20,-21,20,20,20,-15,-55,-59,-16,-42,-40,-43,20,-41,-44,-45,-59,-59,-50,-35,-15,-32,-16,-46,-9,-10,-36,-33,-38,-62,-19,-18,-17,20,20,-29,-28,20,-27,]),'ASSIGN':([27,48,],[55,-8,]),'$end':([2,3,4,5,8,9,10,11,12,13,15,17,18,19,20,21,22,23,25,26,27,29,30,32,33,34,35,37,38,48,52,53,54,59,60,61,62,70,76,77,78,79,80,81,82,83,84,86,87,88,89,92,93,95,100,101,105,],[-4,-60,-25,-24,-30,-51,-14,-13,-23,-15,0,-5,-56,-11,-61,-31,-6,-1,-47,-3,-59,-34,-16,-12,-37,-39,-7,-26,-22,-8,-2,-20,-21,-15,-55,-59,-16,-59,-59,-50,-35,-15,-32,-16,-46,-9,-10,-36,-33,-38,-62,-19,-18,-17,-29,-28,-27,]),'STDIN':([55,],[84,]),'STRING':([0,2,3,4,5,8,9,10,11,12,13,14,16,17,18,19,20,21,22,25,26,27,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,76,77,78,79,80,81,82,83,84,86,87,88,89,90,92,93,95,96,97,100,101,103,105,],[10,-4,-60,-25,-24,-30,-51,-14,-13,-23,-15,-57,-58,-5,-56,-11,-61,-31,-6,-47,10,-59,-34,-16,10,-12,-37,-39,-7,10,-26,-22,10,10,-53,10,-52,-54,10,10,-8,-49,10,-48,-20,-21,10,10,10,10,-15,-55,-59,-16,-42,-40,-43,10,-41,-44,-45,-59,-59,-50,-35,-15,-32,-16,-46,-9,-10,-36,-33,-38,-62,10,-19,-18,-17,10,10,-29,-28,10,-27,]),'GREATER_OR_EQUAL':([3,9,10,11,13,18,19,20,25,27,30,32,34,48,59,60,61,62,70,76,77,79,81,82,89,],[-60,-51,-14,-13,-15,-56,-11,-61,-47,-59,-16,-12,65,-8,-15,-55,-59,-16,-59,-59,-50,-15,-16,-46,-62,]),'DOLLAR':([0,2,3,4,5,8,9,10,11,12,13,14,16,17,18,19,20,21,22,25,26,27,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,76,77,78,79,80,81,82,83,84,86,87,88,89,92,93,95,96,97,100,101,103,105,],[24,-4,-60,-25,-24,-30,-51,-14,-13,-23,-15,-57,-58,-5,-56,-11,-61,-31,-6,-47,24,-59,-34,-16,24,-12,-37,-39,-7,24,-26,-22,24,24,-53,24,-52,-54,24,24,-8,-49,24,-48,-20,-21,24,24,24,-15,-55,-59,-16,-42,-40,-43,24,-41,-44,-45,-59,-59,-50,-35,-15,-32,-16,-46,-9,-10,-36,-33,-38,-62,-19,-18,-17,24,24,-29,-28,24,-27,]),'ELSE':([101,],[102,]),'BETWEEN':([3,9,10,11,13,18,19,20,27,30,32,48,59,60,61,62,70,76,79,81,89,],[-60,45,-14,-13,-15,-56,-11,-61,-59,-16,-12,-8,-15,-55,-59,-16,-59,-59,-15,-16,-62,]),'EQ':([3,9,10,11,13,18,19,20,25,27,30,32,34,48,59,60,61,62,70,76,77,79,81,82,89,],[-60,-51,-14,-13,-15,-56,-11,-61,-47,-59,-16,-12,68,-8,-15,-55,-59,-16,-59,-59,-50,-15,-16,-46,-62,]),'IF':([0,2,3,4,5,8,9,10,11,12,13,17,18,19,20,21,22,25,26,27,29,30,32,33,34,35,37,38,48,53,54,59,60,61,62,70,76,77,78,79,80,81,82,83,84,86,87,88,89,92,93,95,96,97,100,101,103,105,],[28,-4,-60,-25,-24,-30,-51,-14,-13,-23,-15,-5,-56,-11,-61,-31,-6,-47,28,-59,-34,-16,-12,-37,-39,-7,-26,-22,-8,-20,-21,-15,-55,-59,-16,-59,-59,-50,-35,-15,-32,-16,-46,-9,-10,-36,-33,-38,-62,-19,-18,-17,28,28,-29,-28,28,-27,]),'AND':([13,30,79,81,],[46,57,46,57,]),'MORE_THAN':([3,9,10,11,13,18,19,20,25,27,30,32,34,48,59,60,61,62,70,76,77,79,81,82,89,],[-60,-51,-14,-13,-15,-56,-11,-61,-47,-59,-16,-12,63,-8,-15,-55,-59,-16,-59,-59,-50,-15,-16,-46,-62,]),'FALSE':([0,2,3,4,5,8,9,10,11,12,13,14,16,17,18,19,20,21,22,25,26,27,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,76,77,78,79,80,81,82,83,84,86,87,88,89,90,92,93,95,96,97,100,101,103,105,],[30,-4,-60,-25,-24,-30,-51,-14,-13,-23,-15,-57,-58,-5,-56,-11,-61,-31,-6,-47,30,-59,-34,-16,62,-12,-37,-39,-7,30,-26,-22,30,62,-53,62,-52,-54,62,81,-8,-49,62,-48,-20,-21,62,30,62,81,-15,-55,-59,-16,-42,-40,-43,62,-41,-44,-45,-59,-59,-50,-35,-15,-32,-16,-46,-9,-10,-36,-33,-38,-62,62,-19,-18,-17,30,30,-29,-28,30,-27,]),'FLOAT':([0,2,3,4,5,8,9,10,11,12,13,14,16,17,18,19,20,21,22,25,26,27,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,76,77,78,79,80,81,82,83,84,86,87,88,89,90,92,93,95,96,97,100,101,103,105,],[32,-4,-60,-25,-24,-30,-51,-14,-13,-23,-15,-57,-58,-5,-56,-11,-61,-31,-6,-47,32,-59,-34,-16,32,-12,-37,-39,-7,32,-26,-22,32,32,-53,32,-52,-54,32,32,-8,-49,32,-48,-20,-21,32,32,32,32,-15,-55,-59,-16,-42,-40,-43,32,-41,-44,-45,-59,-59,-50,-35,-15,-32,-16,-46,-9,-10,-36,-33,-38,-62,32,-19,-18,-17,32,32,-29,-28,32,-27,]),'PLUS_ONE':([27,48,70,76,],[53,-8,53,53,]),'LEFT_PAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,76,77,78,79,80,81,82,83,84,86,87,88,89,92,93,95,96,97,100,101,103,105,],[36,-4,-60,-25,-24,40,41,-30,-51,-14,-13,-23,-15,-57,-58,-5,-56,-11,-61,-31,-6,-47,36,-59,56,-34,-16,36,-12,-37,-39,-7,36,-26,-22,36,36,-53,36,-52,-54,36,36,-8,-49,36,-48,-20,-21,36,36,36,-15,-55,-59,-16,-42,-40,-43,36,-41,-44,-45,-59,-59,-50,-35,-15,-32,-16,-46,-9,-10,-36,-33,-38,-62,-19,-18,-17,36,36,-29,-28,36,-27,]),'MINUS_ONE':([27,48,70,76,],[54,-8,54,54,]),'OR':([13,30,],[47,58,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'varDeclaration':([0,26,96,97,103,],[2,2,2,2,2,]),'variableType':([0,26,31,36,40,41,43,46,47,50,55,56,57,58,66,90,96,97,103,],[3,3,3,3,3,3,3,3,3,3,83,3,3,3,3,95,3,3,3,]),'multiSign':([9,],[43,]),'matchedif':([0,26,96,97,103,],[4,4,4,4,4,]),'number':([0,26,31,36,40,41,43,46,47,50,55,56,57,58,66,90,96,97,103,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'loopStmt':([0,26,96,97,103,],[5,5,5,5,5,]),'sumSign':([25,],[50,]),'logicalExp':([0,26,36,40,56,96,97,103,],[8,8,8,73,85,8,8,8,]),'multiNegExp':([0,26,31,36,40,43,46,47,50,56,57,58,66,96,97,103,],[9,9,60,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'conditionalStmt':([0,26,96,97,103,],[12,12,12,12,12,]),'program':([0,],[15,]),'statement':([0,26,96,97,103,],[17,17,17,17,17,]),'factor':([0,26,31,36,40,41,43,46,47,50,56,57,58,66,96,97,103,],[18,18,18,18,18,75,18,18,18,18,18,18,18,18,18,18,18,]),'sumLessExpression':([0,26,36,41,96,97,103,],[21,21,21,74,21,21,21,]),'constDeclaration':([0,26,96,97,103,],[22,22,22,22,22,]),'declarationList':([0,26,96,97,103,],[23,52,98,99,104,]),'andExp':([0,26,36,40,47,56,58,96,97,103,],[29,29,29,29,80,29,87,29,29,29,]),'compSign':([34,],[66,]),'declaration':([0,26,96,97,103,],[26,26,26,26,26,]),'variable':([0,26,31,36,40,41,43,46,47,50,56,57,58,66,96,97,103,],[27,27,61,70,61,76,61,61,61,61,61,61,61,61,27,27,27,]),'term':([0,26,36,40,43,46,47,50,56,57,58,66,96,97,103,],[25,25,25,25,77,25,25,25,25,25,25,25,25,25,25,]),'unaryOp':([0,26,31,36,40,43,46,47,50,56,57,58,66,96,97,103,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'compExp':([0,26,36,40,46,47,56,57,58,96,97,103,],[33,33,33,33,78,33,33,86,33,33,33,33,]),'sumExp':([0,26,36,40,46,47,50,56,57,58,66,96,97,103,],[34,34,34,34,34,34,82,34,34,34,88,34,34,34,]),'funcDeclaration':([0,26,96,97,103,],[35,35,35,35,35,]),'unmatchedif':([0,26,96,97,103,],[37,37,37,37,37,]),'expression':([0,26,36,96,97,103,],[38,38,71,38,38,38,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declarationList','program',1,'p_program','perl_parser.py',45),
  ('declarationList -> declaration declarationList','declarationList',2,'p_declarationList','perl_parser.py',50),
  ('declarationList -> declaration','declarationList',1,'p_declarationList2','perl_parser.py',55),
  ('declaration -> varDeclaration','declaration',1,'p_declaration','perl_parser.py',60),
  ('declaration -> statement','declaration',1,'p_declaration2','perl_parser.py',65),
  ('declaration -> constDeclaration','declaration',1,'p_declaration3','perl_parser.py',70),
  ('declaration -> funcDeclaration','declaration',1,'p_declaration4','perl_parser.py',75),
  ('variable -> DOLLAR IDENTIFIER','variable',2,'p_variable','perl_parser.py',80),
  ('varDeclaration -> variable ASSIGN variableType','varDeclaration',3,'p_varDeclaration','perl_parser.py',87),
  ('varDeclaration -> variable ASSIGN STDIN','varDeclaration',3,'p_varDeclaration2','perl_parser.py',93),
  ('number -> INTEGER','number',1,'p_number','perl_parser.py',100),
  ('number -> FLOAT','number',1,'p_number2','perl_parser.py',105),
  ('variableType -> number','variableType',1,'p_variableType','perl_parser.py',109),
  ('variableType -> STRING','variableType',1,'p_variableType2','perl_parser.py',114),
  ('variableType -> TRUE','variableType',1,'p_variableType3','perl_parser.py',120),
  ('variableType -> FALSE','variableType',1,'p_variableType4','perl_parser.py',126),
  ('constDeclaration -> USE CONSTANT IDENTIFIER CONST_ASSIGN variableType','constDeclaration',5,'p_constDeclaration','perl_parser.py',132),
  ('funcDeclaration -> PRINT LEFT_PAR factor RIGHT_PAR','funcDeclaration',4,'p_funcDeclaration','perl_parser.py',141),
  ('funcDeclaration -> PRINT LEFT_PAR sumLessExpression RIGHT_PAR','funcDeclaration',4,'p_funcDeclaration2','perl_parser.py',150),
  ('sumLessExpression -> variable PLUS_ONE','sumLessExpression',2,'p_sumLessExpression','perl_parser.py',159),
  ('sumLessExpression -> variable MINUS_ONE','sumLessExpression',2,'p_sumLessExpression1','perl_parser.py',165),
  ('statement -> expression','statement',1,'p_statement','perl_parser.py',171),
  ('statement -> conditionalStmt','statement',1,'p_statement2','perl_parser.py',176),
  ('statement -> loopStmt','statement',1,'p_statement3','perl_parser.py',181),
  ('conditionalStmt -> matchedif','conditionalStmt',1,'p_conditionalStmt','perl_parser.py',186),
  ('conditionalStmt -> unmatchedif','conditionalStmt',1,'p_conditionalStmt2','perl_parser.py',191),
  ('matchedif -> IF LEFT_PAR logicalExp RIGHT_PAR LEFT_BRACE declarationList RIGHT_BRACE ELSE LEFT_BRACE declarationList RIGHT_BRACE','matchedif',11,'p_matchedif','perl_parser.py',196),
  ('unmatchedif -> IF LEFT_PAR logicalExp RIGHT_PAR LEFT_BRACE declarationList RIGHT_BRACE','unmatchedif',7,'p_unmatchedif','perl_parser.py',210),
  ('loopStmt -> WHILE LEFT_PAR logicalExp RIGHT_PAR LEFT_BRACE declarationList RIGHT_BRACE','loopStmt',7,'p_loopStmt','perl_parser.py',220),
  ('expression -> logicalExp','expression',1,'p_expression2','perl_parser.py',236),
  ('expression -> sumLessExpression','expression',1,'p_expression3','perl_parser.py',241),
  ('logicalExp -> TRUE OR andExp','logicalExp',3,'p_logicalExp3','perl_parser.py',255),
  ('logicalExp -> FALSE OR andExp','logicalExp',3,'p_logicalExp4','perl_parser.py',262),
  ('logicalExp -> andExp','logicalExp',1,'p_logicalExp5','perl_parser.py',269),
  ('andExp -> TRUE AND compExp','andExp',3,'p_andExp3','perl_parser.py',283),
  ('andExp -> FALSE AND compExp','andExp',3,'p_andExp4','perl_parser.py',290),
  ('andExp -> compExp','andExp',1,'p_andExp5','perl_parser.py',297),
  ('compExp -> sumExp compSign sumExp','compExp',3,'p_compExp','perl_parser.py',302),
  ('compExp -> sumExp','compExp',1,'p_compExp2','perl_parser.py',307),
  ('compSign -> LESS_OR_EQUAL','compSign',1,'p_compSign','perl_parser.py',312),
  ('compSign -> LESS_THAN','compSign',1,'p_compSign2','perl_parser.py',318),
  ('compSign -> MORE_THAN','compSign',1,'p_compSign3','perl_parser.py',324),
  ('compSign -> GREATER_OR_EQUAL','compSign',1,'p_compSign4','perl_parser.py',330),
  ('compSign -> EQ','compSign',1,'p_compSign5','perl_parser.py',336),
  ('compSign -> NEQ','compSign',1,'p_compSign6','perl_parser.py',342),
  ('sumExp -> term sumSign sumExp','sumExp',3,'p_sumExp','perl_parser.py',348),
  ('sumExp -> term','sumExp',1,'p_sumExp2','perl_parser.py',353),
  ('sumSign -> MINUS','sumSign',1,'p_sumSign','perl_parser.py',358),
  ('sumSign -> PLUS','sumSign',1,'p_sumSign2','perl_parser.py',364),
  ('term -> multiNegExp multiSign term','term',3,'p_term','perl_parser.py',370),
  ('term -> multiNegExp','term',1,'p_term2','perl_parser.py',375),
  ('multiSign -> EXP','multiSign',1,'p_multiSign','perl_parser.py',380),
  ('multiSign -> STAR','multiSign',1,'p_multiSign2','perl_parser.py',386),
  ('multiSign -> BETWEEN','multiSign',1,'p_multiSign3','perl_parser.py',392),
  ('multiNegExp -> unaryOp multiNegExp','multiNegExp',2,'p_multiNegExp','perl_parser.py',398),
  ('multiNegExp -> factor','multiNegExp',1,'p_multiNegExp2','perl_parser.py',403),
  ('unaryOp -> MINUS','unaryOp',1,'p_unaryOp','perl_parser.py',408),
  ('unaryOp -> PLUS','unaryOp',1,'p_unaryOp2','perl_parser.py',414),
  ('factor -> variable','factor',1,'p_factor','perl_parser.py',420),
  ('factor -> variableType','factor',1,'p_factor2','perl_parser.py',425),
  ('factor -> IDENTIFIER','factor',1,'p_factor3','perl_parser.py',430),
  ('factor -> LEFT_PAR expression RIGHT_PAR','factor',3,'p_factor4','perl_parser.py',437),
]
